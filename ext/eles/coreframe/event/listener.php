<?php
namespace eles\coreframe\event; use Symfony\Component\EventDispatcher\EventSubscriberInterface; class listener implements EventSubscriberInterface { protected $ads_service; protected $sidebar_service; protected $widgets_service; protected $db; protected $cache; protected $config; protected $config_text; protected $controller_helper; protected $request; protected $template; protected $language; protected $optionsSchema; protected $options; public function __construct(\eles\coreframe\services\ads_service $ads_service, \eles\coreframe\services\sidebar_service $sidebar_service, \eles\coreframe\services\widgets_service $widgets_service, \phpbb\db\driver\driver_interface $db, \phpbb\cache\driver\driver_interface $cache, \phpbb\config\config $config, \phpbb\config\db_text $config_text, \phpbb\controller\helper $controller_helper, \phpbb\request\request $request, \phpbb\template\template $template, \phpbb\language\language $language) { $this->ads_service = $ads_service; $this->sidebar_service = $sidebar_service; $this->widgets_service = $widgets_service; $this->db = $db; $this->cache = $cache; $this->config = $config; $this->config_text = $config_text; $this->controller_helper = $controller_helper; $this->request = $request; $this->template = $template; $this->language = $language; $sp276b6f = __DIR__ . '/../opts/opts-schema.php'; $this->optionsSchema = (require $sp276b6f); $this->options = $this->config_text->get_array(array_keys($this->optionsSchema)); } public static function getSubscribedEvents() { return array('core.user_setup' => '_event_user_setup', 'core.page_footer' => '_event_page_footer'); } public function _event_user_setup() { if (true == $this->config['c_devmode_on']) { $this->cache->purge(); } $this->language->add_lang('eles', 'eles/coreframe'); $this->template->assign_var('C_THEME_ON', true); $this->template->assign_var('U_THEME', 'http://www.gophpbb.com/eles'); $sp5a6c2f = $this->optionsSchema; foreach ($sp5a6c2f as $sp762b0e => $spa90326) { if ('config_text' === $spa90326) { if ('c_style_vars' === $sp762b0e) { $sp742a03 = ''; $spe87ded = ''; $sp532335 = json_decode(base64_decode($this->options[$sp762b0e]), true); if ($sp532335) { $spceb6a2 = '&amp;'; foreach ($sp532335 as $spaa1bcb => $specdb19) { if (array_search($spaa1bcb, array_keys($sp532335)) + 1 === sizeof($sp532335)) { $spceb6a2 = ''; } $sp742a03 .= $spaa1bcb . '=' . urlencode($specdb19) . $spceb6a2; $spe87ded = $sp532335['theme']; } } $this->template->assign_var('C_STYLE_QUERY', $sp742a03); $this->template->assign_var('C_PARENT_THEME', $spe87ded); } else { if ('c_sidebar_widgets' === $sp762b0e || 'c_footer_widgets' === $sp762b0e) { $sp019f1b = json_decode(base64_decode($this->options[$sp762b0e]), true); if ($sp019f1b) { foreach ($sp019f1b as $sp198ebe) { $sp21aa76 = $this->config["c_wid_{$sp198ebe}_title"]; $spb82a7f = isset($this->options["c_wid_{$sp198ebe}_code"]) ? htmlspecialchars_decode($this->options["c_wid_{$sp198ebe}_code"]) : ''; $this->template->assign_block_vars($sp762b0e, array('WID' => $sp198ebe, 'TITLE' => $sp21aa76, 'CONTENT' => $spb82a7f)); } } } else { if ('c_menu_items' === $sp762b0e) { $sp2f30b3 = json_decode(base64_decode($this->config_text->get($sp762b0e)), true); if ($sp2f30b3) { foreach ($sp2f30b3 as $specdb19) { $this->template->assign_block_vars($sp762b0e, array('CLASS' => 'mi-' . str_replace(' ', '-', strtolower($specdb19['text'])), 'TEXT' => $specdb19['text'], 'URL' => $specdb19['href'], 'ICON' => $specdb19['icon'])); } } } else { if ('c_social_links' === $sp762b0e) { $spcddf3a = json_decode(base64_decode($this->config_text->get($sp762b0e)), true); if ($spcddf3a) { foreach ($spcddf3a as $spaa1bcb => $specdb19) { $this->template->assign_block_vars($sp762b0e, array('ID' => $spaa1bcb, 'ON' => $specdb19['title'] || $specdb19['href'], 'TITLE' => $specdb19['title'], 'URL' => $specdb19['href'], 'OPT' => ucwords(str_replace('-', ' ', $spaa1bcb)))); } } } else { $this->template->assign_var(strtoupper($sp762b0e), htmlspecialchars_decode($this->options[$sp762b0e])); } } } } } else { if ('c_ad_pagetop_on' === $sp762b0e) { $this->template->assign_var(strtoupper($sp762b0e), $this->ads_service->is_visible($sp762b0e)); } else { if ('c_sidebar_on' === $sp762b0e) { $this->template->assign_var(strtoupper($sp762b0e), $this->sidebar_service->is_visible($sp762b0e)); } else { $this->template->assign_var(strtoupper($sp762b0e), $this->config[$sp762b0e]); } } } } } public function _event_page_footer() { $this->widgets_service->add_widgets_data(); } }